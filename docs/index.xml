<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>慕枫的leaf</title><link>http://mapleafgo.gitee.io/</link><description>Recent content on 慕枫的leaf</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 21 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://mapleafgo.gitee.io/index.xml" rel="self" type="application/rss+xml"/><item><title>解决 fastjson 输出 $ref 引用问题</title><link>http://mapleafgo.gitee.io/posts/fastjson/ref/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>http://mapleafgo.gitee.io/posts/fastjson/ref/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">FastJsonConfig&lt;/span> &lt;span class="n">fastJsonConfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">FastJsonConfig&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">fastJsonConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSerializerFeatures&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SerializerFeature&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">DisableCircularReferenceDetect&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 关闭引用检测
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">fastConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFastJsonConfig&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fastJsonConfig&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用Gradle发布到Maven中央仓库</title><link>http://mapleafgo.gitee.io/posts/gradle/maven-publish/</link><pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate><guid>http://mapleafgo.gitee.io/posts/gradle/maven-publish/</guid><description>&lt;ol>
&lt;li>
&lt;p>注册&lt;code>https://issues.sonatype.org/&lt;/code>账号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 scoop 安装 gpg&lt;code>scoop install gpg&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 gpg 生成密钥对&lt;/p>
&lt;p>&lt;code>gpg --full-generate-key&lt;/code>&lt;/p>
&lt;p>到处私钥&lt;/p>
&lt;p>&lt;code>gpg --export-secret-keys -o secring.gpg&lt;/code>&lt;/p>
&lt;p>发布到 ubuntu 密钥库&lt;/p>
&lt;p>&lt;code>gpg --keyserver keyserver.ubuntu.com --send-keys ***********&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>gpg --full-generate-key
gpg (GnuPG) 2.2.20; Copyright (C) 2020 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
请选择您要使用的密钥类型：
(1) RSA 和 RSA （默认）
(2) DSA 和 Elgamal
(3) DSA（仅用于签名）
(4) RSA（仅用于签名）
RSA 密钥的长度应在 1024 位与 4096 位之间。
您想要使用的密钥长度？(2048)
请设定这个密钥的有效期限。
0 = 密钥永不过期
&amp;lt;n&amp;gt; = 密钥在 n 天后过期
&amp;lt;n&amp;gt;w = 密钥在 n 周后过期
&amp;lt;n&amp;gt;m = 密钥在 n 月后过期
&amp;lt;n&amp;gt;y = 密钥在 n 年后过期
密钥永远不会过期
这些内容正确吗？ (y/N) y
GnuPG 需要构建用户标识以辨认您的密钥。
真实姓名：
电子邮件地址：
注释：
最后重复两次输入Passphase（这个在发布的时候需要，相当于密钥密码）
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>配置 gradle 文件，这个看&lt;a class="link" href="https://docs.gradle.org/current/userguide/publishing_maven.html" target="_blank" rel="noopener"
>官方文档&lt;/a>吧&lt;/li>
&lt;/ol></description></item><item><title>Deepin配置使用ibus输入引擎</title><link>http://mapleafgo.gitee.io/posts/linux/install_ibus/</link><pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate><guid>http://mapleafgo.gitee.io/posts/linux/install_ibus/</guid><description>&lt;img src="http://mapleafgo.gitee.io/posts/linux/install_ibus/D736D06C-7B39-4813-A96D-027E2A5F8D2D.png" alt="Featured image of post Deepin配置使用ibus输入引擎" />&lt;h3 id="1安装">1、安装&lt;/h3>
&lt;p>&lt;code>sudo apt install -y ibus ibus-gtk ibus-gtk3 ibus-qt4&lt;/code>&lt;/p>
&lt;h3 id="2使用-im-config-切换输入法引擎">2、使用 im-config 切换输入法引擎&lt;/h3>
&lt;p>&lt;figure>
&lt;a href="http://mapleafgo.gitee.io/posts/linux/install_ibus/810DAEA8-E19F-4186-A9BE-0BA8FC6792A4.png" data-size="1086x557">
&lt;img srcset="http://mapleafgo.gitee.io/posts/linux/install_ibus/810DAEA8-E19F-4186-A9BE-0BA8FC6792A4_hu4fda1713f06cf546ad8a3fbdd43b8b0c_101248_480x0_resize_box_2.png 480w, http://mapleafgo.gitee.io/posts/linux/install_ibus/810DAEA8-E19F-4186-A9BE-0BA8FC6792A4_hu4fda1713f06cf546ad8a3fbdd43b8b0c_101248_1024x0_resize_box_2.png 1024w"
src="http://mapleafgo.gitee.io/posts/linux/install_ibus/810DAEA8-E19F-4186-A9BE-0BA8FC6792A4.png" width="1086" height="557" loading="lazy"
alt="&amp;nbsp;">
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>直接一路确定、yes&lt;/p>
&lt;p>&lt;figure>
&lt;a href="http://mapleafgo.gitee.io/posts/linux/install_ibus/2C8C3069-1C1F-430E-9C47-71D1399D6601.png" data-size="1086x557">
&lt;img srcset="http://mapleafgo.gitee.io/posts/linux/install_ibus/2C8C3069-1C1F-430E-9C47-71D1399D6601_hu8b6d21a0dfcad6b914799609cb6b27bd_109857_480x0_resize_box_2.png 480w, http://mapleafgo.gitee.io/posts/linux/install_ibus/2C8C3069-1C1F-430E-9C47-71D1399D6601_hu8b6d21a0dfcad6b914799609cb6b27bd_109857_1024x0_resize_box_2.png 1024w"
src="http://mapleafgo.gitee.io/posts/linux/install_ibus/2C8C3069-1C1F-430E-9C47-71D1399D6601.png" width="1086" height="557" loading="lazy"
alt="&amp;nbsp;">
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>到这一步选择 ibus，再一路确定。就搞定了&lt;/p>
&lt;h3 id="常见问题">常见问题：&lt;/h3>
&lt;p>旧版本 im-config 因为存在两个 ibus 配置文件，所以 ibus 读取不到。可到&lt;code>/usr/share/im-config/data/&lt;/code>目录下删除 23_ibus 的两个文件。再次启动 im-config 就可以了&lt;/p></description></item><item><title>记一次 nginx 代理问题</title><link>http://mapleafgo.gitee.io/posts/nginx/proxy/</link><pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate><guid>http://mapleafgo.gitee.io/posts/nginx/proxy/</guid><description>&lt;img src="http://mapleafgo.gitee.io/posts/nginx/proxy/4DC29ACB-678C-4221-AFF1-728A6AB2C449.png" alt="Featured image of post 记一次 nginx 代理问题" />&lt;h2 id="最终实现效果">最终实现效果：&lt;/h2>
&lt;p>配置 ssl 证书，http 自动跳转 https。所有 https 请求代理到另外的 http 服务上。&lt;/p>
&lt;h2 id="遇到的问题与解决方式">遇到的问题与解决方式：&lt;/h2>
&lt;h3 id="1http-自动跳转-https">1、http 自动跳转 https&lt;/h3>
&lt;p>这里跳转方式，百度就有好多
下面是腾讯给出的方式，也是大多数采用的方式&lt;/p>
&lt;pre>&lt;code>server {
listen 80;
server_name www.domain.com; #填写绑定证书的域名
rewrite ^(.*)$ https://$host$1 permanent; #把http的域名请求转成https
}
&lt;/code>&lt;/pre>&lt;p>这种方式，我感觉不太直观。于是我使用的是下面这种使用 301 重定向的方法&lt;/p>
&lt;pre>&lt;code>server {
listen 80; #可以省略，默认就是80
server_name ***; #域名
return 301 https://$server_name;
}
&lt;/code>&lt;/pre>&lt;h3 id="2https-请求代理到-http-服务上">2、https 请求代理到 http 服务上&lt;/h3>
&lt;pre>&lt;code>location / {
proxy_pass http://xxx; #代理服务地址
proxy_set_header Host $host; #传输服务器地址
proxy_set_header X-Real-IP $remote_addr; #传输请求地址
proxy_set_header X-Forwarded-Proto $scheme; #传递传输协议（主要就是这个指令）
}
&lt;/code>&lt;/pre></description></item></channel></rss>